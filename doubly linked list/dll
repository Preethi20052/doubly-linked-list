class Node:
     def __init__(self,data):
          self.data=data
          self.next=None
          self.prev=None

class SLL:
     def __init__(self):
          self.head=None
          self.temp=None

     def creation(self):
          num=int(input("enter a no of nodes"))   
          for i in range(num):
               data=int(input("enter the data for nodes"))
               newnode=Node(data)
               if self.head is None:
                    self.head=newnode
                    self.temp=newnode

               else:
                    self.temp.next=newnode
                    newnode.prev=self.temp
                    self.temp=newnode

     def display(self):
          self.temp=self.head
          print("display")
          while self.temp is not None:
               print(self.temp.data,end="->")
               self.temp=self.temp.next

     def insertAtBeg(self):
        data=int(input("enter a data"))
        newnode=Node(data)
        newnode.next=self.head
        self.head.prev=newnode
        self.head=newnode   

     def inserAtLast(self):
          data=int(input("enter a data"))
          newnode=Node(data)
          self.temp=self.head
          while self.temp.next is not None:
              self.temp=self.temp.next
          self.temp.next=newnode
          newnode.prev=self.temp

     def insertAtposition(self):
          data=int(input("enter a data"))
          newnode=Node(data)
          self.temp=self.head
          for i in range(2-1):
               self.temp=self.temp.next
          newnode.next=self.temp
          newnode.prev=self.temp.prev
          self.temp.prev.next=newnode
          self.temp.prev=newnode
            

     def delAtBeg(self):
          self.temp=self.head
          self.head=self.head.next
          del self.temp  
          self.head.prev=None  

     def DeletionAtEnd(self):
        self.temp=self.head
        while self.temp.next.next is not None:
            self.temp=self.temp.next
        self.temp.next=None
        del(self.temp)
     def DeletionAtMiddle(self):
        position=int(input("Enter the position value to remove:"))
        self.temp=self.head
        for i in range(position-1):
            prev=self.temp
            self.temp=self.temp.next
        prev.next=self.temp.next        
              


 


linkedlist=SLL()

linkedlist.creation()
linkedlist.display()
linkedlist.insertAtBeg()
linkedlist.display()
linkedlist.inserAtLast()
linkedlist.display()
linkedlist.insertAtposition()
linkedlist.display()
linkedlist.delAtBeg()
linkedlist.display()
linkedlist.DeletionAtEnd()
linkedlist.display()
linkedlist.DeletionAtMiddle()
linkedlist.display()